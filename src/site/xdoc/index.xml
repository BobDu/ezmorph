<?xml version="1.0" encoding="UTF-8"?>
<document>

	<properties>
		<title>Welcome to EZMorph</title>
	</properties>

	<body>
		<section name="Welcome to EZMorph">
			<p>
				EZMorph is simple java library for transforming an
				Object to another Object.
			</p>
			<p>
				EZMorph's key strenghts are:
				<ul>
					<li>
						Supports transformations for primitives and
						Objects
					</li>
					<li>
						Supports transformations for multidimensional
						arrays
					</li>
					<li>JDK 1.3.1 compatible</li>
					<li>Small memory footprint (~60K)</li>
				</ul>
			</p>
			<p>
				EZMorph comes with another feature:
				<code>ArrayAssertions</code>
				. JUnit 3.x does not have an
				<code>assertEquals()</code>
				method for asserting array equality, and JUnit 4.x has a
				limited one (it only supports Object[] not primitive
				arrays). With
				<code>ArrayAssertions</code>
				is possible to compare a boolean[] with a boolean[] or
				even a Boolean[], an those arrays can be
				multidimensional too.
			</p>
			<p>
				EZMorph began life as the converter package on
				<a href="http://json-lib.sourceforge.net">Json-lib</a>
				but seeing that the features provided were more generic
				than JSON parsing, it became a project on its own.
			</p>
		</section>
		<section name="Related projects">
			<p>
				There are other projects that perform Objetc to Object
				conversions:
			</p>
			<p>
				<table>
					<thead>
						<th>Project name</th>
						<th>Description</th>
					</thead>
					<tbody>
						<tr>
							<td valign="top">
								<a
									href="http://jakarta.apache.org/commons/beanutils">
									Commons-Beanutils
								</a>
							</td>
							<td>
								ConvertUtils -&gt; Utility methods for
								converting String scalar values to
								objects of the specified Class, String
								arrays to arrays of the specified Class.
							</td>
						</tr>
						<tr>
							<td valign="top">
								<a
									href="http://jakarta.apache.org/commons/lang">
									Commons-Lang
								</a>
							</td>
							<td>
								ArrayUtils -&gt; Operations on arrays, primitive arrays 
								(like int[]) and primitive wrapper arrays 
								(like Integer[]).
							</td>
						</tr>
						<tr>
							<td valign="top">
								<a
									href="http://jakarta.apache.org/commons">
									Commons-Convert
								</a>
							</td>
							<td>
								Commons-Convert aims to provide a single
								library dedicated to the task of
								converting an object of one type to
								another. The first stage will focus on
								Object to String and String to Object
								conversions.
							</td>
						</tr>
						<tr>
							<td valign="top">
								<a
									href="http://morph.sourceforge.net/">
									Morph
								</a>
							</td>
							<td>
								Morph is a Java framework that eases the
								internal interoperability of an
								application. As information flows
								through an application, it undergoes
								multiple transformations. Morph provides
								a standard way to implement these
								transformations.
							</td>
						</tr>
						<tr>
							<td valign="top">
								<a
									href="http://gleamynode.net/dev/lorentz/docs/index.html">
									Lorentz
								</a>
							</td>
							<td>
								Lorentz is a generic object-to-object
								conversion framework. It provides a
								simple API to convert a Java objects of
								one type into an object of another type.
							</td>
						</tr>
						<tr>
							<td valign="top">
								<a href="http://springframework.org">
									Spring
								</a>
							</td>
							<td>
								Spring has an excellent support for
								PropertyEditors, that can also be used
								to transform Objects to a from Strings.
							</td>
						</tr>
					</tbody>
				</table>
			</p>
		</section>
	</body>
</document>
